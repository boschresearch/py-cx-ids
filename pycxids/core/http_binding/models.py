# generated by datamodel-codegen:
#   filename:  http_binding_openapi.yaml
#   timestamp: 2023-04-26T13:20:42+00:00

from __future__ import annotations

from typing import List, Optional

from pycxids.models.base_model import MyBaseModel
from pydantic import Field


class DspaceFilter(MyBaseModel):
    pass


class CatalogRequestMessage(MyBaseModel):
    field_context: Optional[str] = Field(None, alias='@context')
    field_type: Optional[str] = Field(None, alias='@type')
    filter: Optional[DspaceFilter] = None


class DcatDistribution(MyBaseModel):
    field_type: Optional[str] = Field(None, alias='@type')
    dct_format: Optional[str] = Field(None, alias='dct:format')
    dcat_access_service: Optional[str] = Field(None, alias='dcat:accessService')


class DcatService(MyBaseModel):
    field_id: Optional[str] = Field(None, alias='@id')
    field_type: Optional[str] = Field(None, alias='@type')
    dct_terms: Optional[str] = Field(None, alias='dct:terms')
    dct_endpoint_url: Optional[str] = Field(None, alias='dct:endpointUrl')


class OdrlOperand(MyBaseModel):
    value: Optional[str] = None


class OdrlConstraint(MyBaseModel):
    left_operand: Optional[OdrlOperand] = Field(None, alias='leftOperand')
    right_operand: Optional[OdrlOperand] = Field(None, alias='rightOperand')
    operator: Optional[str] = None


class OdrlRule(MyBaseModel):
    action: Optional[str] = None
    constraint: Optional[OdrlConstraint] = None
    duty: Optional[List[str]] = None


class OdrlPolicy(MyBaseModel):
    field_id: Optional[str] = Field(None, alias='@id')
    permission: Optional[List[OdrlRule]] = None
    prohibition: Optional[List[OdrlRule]] = None
    obligation: Optional[List[OdrlRule]] = None


class DcatDataset(MyBaseModel):
    field_id: Optional[str] = Field(None, alias='@id')
    field_type: Optional[str] = Field(None, alias='@type')
    dct_title: Optional[str] = Field(None, alias='dct:title')
    dct_description: Optional[str] = Field(None, alias='dct:description')
    dct_keyword: Optional[List[str]] = Field(None, alias='dct:keyword')
    odrl_has_policy: Optional[List[OdrlPolicy]] = Field(None, alias='odrl:hasPolicy')
    dcat_distribution: Optional[DcatDistribution] = Field(
        None, alias='dcat:distribution'
    )


class DcatCatalog(MyBaseModel):
    field_context: Optional[str] = Field(None, alias='@context')
    field_id: Optional[str] = Field(None, alias='@id')
    field_type: Optional[str] = Field(None, alias='@type')
    dct_title: Optional[str] = Field(None, alias='dct:title')
    dct_publisher: Optional[str] = Field(None, alias='dct:publisher')
    dcat_keyword: Optional[List[str]] = Field(None, alias='dcat:keyword')
    dcat_service: Optional[DcatService] = Field(None, alias='dcat:service')
    dcat_dataset: Optional[List[DcatDataset]] = Field(None, alias='dcat:dataset')
